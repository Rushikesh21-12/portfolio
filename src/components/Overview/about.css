@property --hue {
	syntax: '<number>';
	inherits: true;
	initial-value: 0;
}

@property --rotate {
	syntax: '<number>';
	inherits: true;
	initial-value: 0;
}

@property --bg-y {
	syntax: '<number>';
	inherits: true;
	initial-value: 0;
}

@property --bg-x {
	syntax: '<number>';
	inherits: true;
	initial-value: 0;
}

@property --bg-size {
	syntax: '<number>';
	inherits: true;
	initial-value: 0;
}

@property --white-shadow {
	syntax: '<number>';
	inherits: true;
	initial-value: 0;
}

:root {
	--card-color: hsl(260deg 100% 3%);
	--text-color: hsl(260deg 10% 55%);
	--card-radius: 3.6vw;
	--card-width: 15vw;
	--border-width: 3px;
	--bg-size: 1;
	--hue: 0;
	--hue-speed: 1;
	--rotate: 0;
	--animation-speed: 5s;
	--interaction-speed: 1s;
	--scale-factor: 1;
}

.card {
	margin: auto;
	display: flex;
	align-items: center;
	justify-content: center;
	position: relative;
	z-index: 2;
}

.card:hover > div {
	mix-blend-mode: darken;
	--text-color: white;
	/* box-shadow: 0 0 calc(var(--white-shadow) * 1vw) calc(var(--white-shadow) * 0.15vw)
		rgba(255, 255, 255, 0.2); */
	animation: shadow-pulse calc(var(--animation-speed) * 2) linear infinite;
}

.card:hover .inner:before {
	--bg-size: 15;
	animation-play-state: paused;
	transition: --bg-size var(--interaction-speed) ease;
}

.card:hover {
	--rotate: 900;
	--scale-factor: 1.25;
	animation-play-state: paused;
}

.card:hover {
	animation-play-state: paused;
}

.inner {
	width: 100%;
	height: 100%;
	display: flex;
	align-items: center;
	justify-content: center;
}

.inner:before {
	content: '';
	display: block;
	position: absolute;
	border-radius: 20px;
	mix-blend-mode: color-burn;
	z-index: -1;
	background: radial-gradient(
		30% 30% at calc(var(--bg-x) * 1%) calc(var(--bg-y) * 1%),
		hsl(calc(calc(var(--hue) * var(--hue-speed)) * 1deg), 100%, 90%) calc(0% * var(--bg-size)),
		hsl(calc(calc(var(--hue) * var(--hue-speed)) * 1deg), 100%, 80%) calc(20% * var(--bg-size)),
		hsl(calc(calc(var(--hue) * var(--hue-speed)) * 1deg), 100%, 60%) calc(40% * var(--bg-size)),
		transparent 100%
	);
	width: calc(100% + var(--border-width));
	height: calc(100% + var(--border-width));
	animation: hue-animation var(--animation-speed) linear infinite,
		rotate-bg var(--animation-speed) linear infinite;
	transition: --bg-size var(--interaction-speed) ease;
}

@keyframes shadow-pulse {
	0%,
	24%,
	46%,
	73%,
	96% {
		--white-shadow: 0.5;
	}

	12%,
	28%,
	41%,
	63%,
	75%,
	82%,
	98% {
		--white-shadow: 2.5;
	}

	6%,
	32%,
	57% {
		--white-shadow: 1.3;
	}

	18%,
	52%,
	88% {
		--white-shadow: 3.5;
	}
}

@keyframes rotate-bg {
	0% {
		--bg-x: 0;
		--bg-y: 0;
	}

	25% {
		--bg-x: 100;
		--bg-y: 0;
	}

	50% {
		--bg-x: 100;
		--bg-y: 100;
	}

	75% {
		--bg-x: 0;
		--bg-y: 100;
	}

	100% {
		--bg-x: 0;
		--bg-y: 0;
	}
}

@keyframes rotate {
	from {
		--rotate: -70;
	}

	to {
		--rotate: calc(360 - 70);
	}
}

@keyframes hue-animation {
	0% {
		--hue: 0;
	}

	100% {
		--hue: 360;
	}
}
